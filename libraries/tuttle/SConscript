Import( 'project' )
Import( 'libs' )

tuttleCommonSources = project.scanFiles( ['src/tuttle/common'] )

project.StaticSharedLibrary( 'tuttlePlugin',
                             sources=project.scanFiles( ['src/tuttle/plugin'] ) + tuttleCommonSources,
                             includes=['src','src/tuttle/host/core'],
                             libraries=[ libs.openfxPluginSupportHack,
                                         libs.openfxHack,
                                         libs.boost,
                                        ]
                            )

project.StaticSharedLibrary( 'tuttleHost',
                       sources=project.scanFiles( ['src/tuttle/host'] ) + tuttleCommonSources,
                       includes=['src'],
                       libraries=[ libs.openfxHack,
                                   libs.dl,
                                   libs.boost_filesystem,
                                   libs.boost_serialization,
                                   libs.boost_thread,
			                       libs.boost_gil,
                                   libs.png,
                                  ]
                      )

envSwig = project.createEnv( [libs.python, libs.tuttleHost, libs.pthread] )
envSwig.AppendUnique( SWIGFLAGS = ['-python','-c++','-Wall'] )
envSwig.AppendUnique( SWIGPATH = envSwig['CPPPATH'] )
envSwig.AppendUnique( SWIGOUTDIR = 'tuttlePython' )
envSwig.Replace( SHLIBPREFIX = '' )
envSwig.Replace( LIBPREFIX = '' )
#print "SWIGPATH from CPPPATH : ", envSwig['CPPPATH']

tuttlePython = envSwig.SharedLibrary( target='_tuttle', source=['src/tuttle/host/tuttle.i'] )
tuttlePythonInstall = envSwig.Install( '#tuttlePython', tuttlePython )

envSwig.Alias( 'tuttlePython', tuttlePythonInstall )
