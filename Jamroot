###############################################################################
## TuttleOFX Project
##
## Main BJam makefile for TuttleOFX
## 
## Build:
## 
## call bjam with:
## 		/tuttle parameter to build tuttle library
## 		/sam parameter to build sam command line tool
## 
###############################################################################

import os ;

###############################################################################
# Python
###############################################################################

constant 	PYTHON_INCLUDE  : [ SHELL " echo \"`python-config --includes `\" " ] ;
constant	PYTHON_CFLAGS   : [ SHELL " echo \"`python-config --cflags   `\" " ] ;
constant	PYTHON_LIBS     : [ SHELL " echo \"`python-config --libs     `\" " ] ;

###############################################################################
# Image Magick
###############################################################################

constant	MAGICK_INCLUDE  : /usr/include/ImageMagick ;
constant	MAGICK_CXXFLAGS : [ SHELL " echo \"`MagickCore-config --cppflags`\" " ] ;
constant	MAGICK_CFLAGS   : [ SHELL " echo \"`MagickCore-config --cflags  `\" " ] ;
constant	MAGICK_LIBS     : [ SHELL " echo \"`MagickCore-config --libs    `\" " ] ;

alias imageMagick
    : # no sources
    : # no build requirements
    : # no default build
    : <include>$(MAGICK_INCLUDE)
    ;


###############################################################################
# OpenGL
###############################################################################

if [ os.name ] = NT	
	{	lib opengl32 ; 	alias opengl : opengl32 ; }
else if [ os.name ] = LINUX 
	{	alias opengl : ; }
else if [ os.name ] = MACOSX
	{	alias opengl : : : : <linkflags>"-framework OpenGL" ; }



###############################################################################
# Environment variables
###############################################################################
path-constant	3RD_PARTY	: 3rdParty ;
path-constant	BOOST_LIBS	: 3rdParty/boost ;
path-constant	BOOST_HACK	: 3rdParty/boostHack ;
path-constant	DIST		: ./dist ;

###############################################################################
# Global project requirements
###############################################################################
project
	:
	requirements
		# multithreading on
		<threading>multi

		#<variant>release:<warnings-as-errors>on
		<variant>release:<define>TUTTLE_PRODUCTION
		<variant>release:<toolset>gcc,<optimization>speed:<define>USE_INLINE_ASSEMBLER
		# or
		#<variant>release:<toolset>gcc,<optimization>full
		

		<os>LINUX:<variant>debug:<linkflags>-Wl,--no-undefined
		<os>LINUX:<variant>release:<linkflags>-fvisibility=hidden

		<os>NT:<define>_WINDOWS
		<os>LINUX:<cxxflags>-fPIC

		# icu library off
		#<define>BOOST_HAS_ICU=0

		#
		# GCC specific flags
		#
		# removes deprecated header used by boost
		<toolset>gcc:<cxxflags>-Wno-deprecated
	;


###############################################################################
# 3rd party libraries
###############################################################################
use-project		/boost		: $(BOOST_LIBS) ;

###############################################################################
# Main targets
###############################################################################
#
# TUTTLE LIBRARY & TESTS
#
use-project		/tuttle			: libraries/tuttle ;
use-project		/tuttletests	: libraries/tuttle/tests ;

#
# SAM COMMAND LINE TOOL & TESTS
#
use-project		/sam-tools		: applications/sam/ ;

#use-project	/pyTuttle		: applications/pyTuttle ;
#use-project	/samtests		: applications/sam-ls/tests ;


#
# TUTTLEOFX PLUGINS
#
use-project		/plugins		: plugins ;

alias			/tests			: /plugins
				          		  /tuttletests
				          		  /samtests
				        		;

# all targets have to be marked as explicit
explicit		/tuttle
				/tuttletests

				/sam-tools

#				/samtests
				/plugins
				/pyTuttle
				/tests
				;
