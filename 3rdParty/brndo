#! /usr/bin/env python
# -*- mode: python -*-
'''
(brndo0.1)
Bernardo ! Come and fetch ! ... and build, and check and do stuffs.

SYNOPSIS
    ./brndo [-h] [-c cli_cmd]

    Without arguments run a cmd line interface (CLI) for helping compiling Tuttle 3rdparties.

    Options:
      -h  Print this help and exit.
      -c  Execute a CLI command and exit.

    Feature:
        readline history (file save in .brndohistory)

    Tips:
        for reading the syntax of a cli cmd directly from the terminal, type
        `./brndo -c help cmd_name` or `./brndo -c ? cmd_name`
        
CLI CMDS
  help ?        quit q EOF
  list
  materialize   install
  distclean     clean

TODO
  dependencies
  memorize installed libs
  adapt to the new procedure materailize install clean distclean steps.
cmds:
  materialize
  delete cmds: fetch configure shacheck build extract

BUGS
  readline tab completion doesn't work on some terminal. (spot on osx between a Lion and a Mountain Lion)
'''
import json
import os
import readline
import sys

#from init import all_libs

download_dir = "archive"
extracted_dir = "extracted"

## History stuffs
history_path = ".brndohistory"

def save_history(history_path=history_path):
    readline.write_history_file(history_path)

if __name__ == '__main__':

    if '-h' in sys.argv:
        print __doc__
        sys.exit()

    sys.path.append('site-packages')
    import bernardo.cli

    with open('all_libs.json') as f:
        all_libs = json.loads(f.read())

    brndo = bernardo.cli.Brndo(all_libs, download_dir, extracted_dir)

    if '-c' in sys.argv:
        sys.exit(brndo.onecmd(" ".join(sys.argv[sys.argv.index('-c')+1:])))

    ## Cmd history setup
    if os.path.exists(history_path):
        readline.read_history_file(history_path)

    import atexit

    atexit.register(save_history)
    brndo.cmdloop(__doc__)
