Import( 'project', 'libs' )

libraries = [
		libs.tuttleCommon,
		libs.sequenceParser,
		libs.boost_filesystem,
		libs.boost_program_options,
		libs.boost_regex,
		libs.boost_thread,
		libs.boost_log,
	]

sam = project.Program(
		target='sam',
		dirs=['src/sam/sam'],
		includes=['src'],
		libraries=libraries,
	)

ls = project.Program(
		target='sam-ls',
		dirs=['src/sam/ls'],
		includes=['src'],
		libraries=libraries,
	)

ll  = project.env.Install( project.inOutputBin(), 'src/sam/sam/sam-ll' )
lss = project.env.Install( project.inOutputBin(), 'src/sam/sam/sam-lss' )
lls = project.env.Install( project.inOutputBin(), 'src/sam/sam/sam-lls' )

cp = project.Program(
		target='sam-cp',
		dirs=['src/sam/cp'],
		includes=['src'],
		libraries=libraries,
	)

mv = project.Program(
		target='sam-mv',
		dirs=['src/sam/mv'],
		includes=['src'],
		libraries=libraries,
	)

rm = project.Program(
		target='sam-rm',
		dirs=['src/sam/rm'],
		includes=['src'],
		libraries=libraries,
	)

do = project.Program(
		target='sam-do',
		dirs=['src/sam/do'],
		includes=['src'],
		libraries=libraries+[libs.tuttleHost],
	)

diff = project.Program(
		target='sam-diff',
		dirs=['src/sam/diff'],
		includes=['src'],
		libraries=libraries+[libs.tuttleHost],
	)

info = project.Program(
		target='sam-info',
		dirs=['src/sam/info'],
		includes=['src'],
		libraries=libraries+[libs.tuttleHost, libs.imagemagick],
	)

plugins = project.Program(
		target='sam-plugins',
		dirs=['src/sam/plugins'],
		includes=['src'],
		libraries=libraries+[libs.tuttleHost],
	)

check = project.Program(
		target='sam-check',
		dirs=['src/sam/check'],
		includes=['src'],
		libraries=libraries+[libs.tuttleHost],
	)

viewer = project.env.Install( project.inOutputBin(), 'src/sam/sam/sam-viewer' )

Alias( 'sam-all',
	[
		sam,
		ls,
		ll,
		lss,
		lls,
		cp,
		mv,
		rm,
		do,
		diff,
		info,
		plugins,
		check,
		viewer,
	]
)


