Import( 'project' )
Import( 'libs' )

import os.path

incdirs = ['src/common', 'src/application']
src_common = project.scanFiles( ['src/common'], accept=['*.cpp','*.c'] )
src_application = project.scanFiles( ['src/application'], accept=['*.cpp','*.c'] )
src_ui = project.scanFiles( ['src/application'], accept=['*.ui'] )
src_swig = project.scanFiles( ['src/common'], accept=['*.i'] )

#print 'src_ui:', src_ui

libraries = [libs.boost, libs.m, libs.pthread, libs.python, libs.tiff, libs.jpeg, libs.png]
librariesGui = [libs.qt4(modules=['QtCore', 'QtGui', 'QtOpenGL'] #)]
                         , uiFiles=src_ui)]

name = project.getName()

env_appli = project.createEnv( libraries+librariesGui )
env_appli.Append( CPPPATH=incdirs )
appli = env_appli.Program( target=name, source=src_common+src_application ) #+src_ui )
appliInstall = env_appli.Install( project.inOutputBin(), appli )

pythonOutputDir = os.path.join( project.inOutputDir(), 'python' )

envSwig = project.createEnv( libraries )
envSwig.Append( CPPPATH=incdirs )
envSwig.Append( SWIGFLAGS=['-python','-c++','-Wall'] )
envSwig.Append( SWIGPATH=envSwig['CPPPATH'] )
envSwig.Append( SWIGOUTDIR=pythonOutputDir )
envSwig.Replace( SHLIBPREFIX = '' )
envSwig.Replace( LIBPREFIX = '' )
swigWrap = envSwig.SharedLibrary( target='_'+name, source=src_swig + src_common )
swigWrapInstall = envSwig.Install( pythonOutputDir, swigWrap )


envSwig.Depends( appli, swigWrapInstall )

#env_appli.Alias( 'all', swigWrapInstall )
#env_appli.Alias( 'all', appliInstall )

env_appli.Alias( name, appliInstall )
#env_appli.Alias( name, swigwrap )


