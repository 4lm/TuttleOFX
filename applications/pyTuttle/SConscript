Import( 'project' )
Import( 'libs' )


incdirs = ['src/common', 'src/application']
sources_common = project.scanFiles( ['src/common'], accept=['*.cpp','*.c'] )
sources_application = project.scanFiles( ['src/application'], accept=['*.cpp','*.c'] )
sources_ui = project.scanFiles( ['src/application'], accept=['*.ui'] )
sources_swig = project.scanFiles( ['src/common'], accept=['*.i'] )

libraries = [libs.m, libs.pthread, libs.python, libs.tiff, libs.jpeg, libs.png ]
librariesGui = [libs.qt4(modules=['QtCore', 'QtGui', 'QtOpenGL'], uiFiles=sources_ui)]

name = project.getName()

env_appli = project.createEnv( libraries+librariesGui )
env_appli.Append( CPPPATH=incdirs )
appli = env_appli.Program( target=name, source=sources_common+sources_application )
appliInstall = env_appli.Install( project.inOutputBin(), appli )

env_swig = project.createEnv( libraries )
env_swig.Append( CPPPATH=incdirs )
env_swig.Append( SWIGFLAGS=['-python','-c++','-Wall'] )
env_swig.Append( SWIGPATH=env_swig['CPPPATH'] )
env_swig.Append( SWIGOUTDIR='tuttlePython' )
swigwrap = env_swig.SharedLibrary( target='tuttlePython/_'+ name, source=sources_swig+sources_common )


#env_appli.Alias( 'all', appliInstall )
#env_appli.Alias( 'all', swigwrap )

env_appli.Alias( name, appliInstall )
env_appli.Alias( name, swigwrap )


